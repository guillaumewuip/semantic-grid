
/////////////
// Margins //
/////////////


/**
 * marginsLoop
 *
 * Generates all margins classes or attributes
 * Called for each breakpoints + default
 * 
 * @param {number} n           Grid columns number
 * @param {string} container   Grid name
 * @param {string} $attr       Optionnal. Html attribute to use instead of class.
 *
 * @author Guillaume
 */
@mixin marginsLoop ($n, $container, $attr: null) {

    @for $i from 1 through $n {

        $m : percentage($i / $n);

        $withMargins : $with + $pluralPrefix + $margins;

        $marginLeft  : $at + $left + $of + $i + $columns;
        $marginRight : $at + $right + $of + $i + $columns;
        $marginSide  : $withMargins + $of + $i + $columns;

        //If no $attr
        //Define a class
        @if $attr == null {
            
            .#{ $container } > .#{ $withMargins }.#{ $marginLeft } {
                margin-left : $m;
            }    
            .#{ $container } > .#{ $withMargins }.#{ $marginRight } {
                margin-right : $m;
            }
            .#{ $container } > .#{ $marginSide } {
                margin-left  : $m;
                margin-right : $m;
            }

        //If there is an $attr
        //Use it instead of a class
        } @else {

            .#{ $container } > [#{ $attr }][#{ $attr }~="#{ $withMargins }"][#{ $attr }~="#{ $marginLeft }"],
            [#{ $attr }][#{ $attr }~="#{ $container }"] > [#{ $attr }][#{ $attr }~="#{ $withMargins }"][#{ $attr }~="#{ $marginLeft }"] {
                margin-left : $m;
            }    
            .#{ $container } > [#{ $attr }][#{ $attr }~="#{ $withMargins }"][#{ $attr }~=".#{ $marginRight }"],
            [#{ $attr }][#{ $attr }~="#{ $container }"] > [#{ $attr }][#{ $attr }~="#{ $withMargins }"][#{ $attr }~=".#{ $marginRight }"] {
                margin-right : $m;
            }
            .#{ $container } > [#{ $attr }][#{ $attr }~="#{ $marginSide }"],
            [#{ $attr }][#{ $attr }~="#{ $container }"] > [#{ $attr }][#{ $attr }~="#{ $marginSide }"] {
                margin-left  : $m;
                margin-right : $m;
            }
        }
    }
}


/**
 * margins
 *
 * Defines all margins classes or attrs
 *
 * @param {number} n           Grid columns number
 * @param {string} container   Grid name
 *
 * @author Guillaume
 */
@mixin margins ($n, $container) {
    
    @include marginsLoop($n, $container);
    
    @each $break in $gridBreakpoints {

        $breakName  : nth($break, 1);
        $breakValue : nth($break, 2);

        @include MQ($breakValue) {
            @include marginsLoop($n, $container, $breakName);
        }
            
    }
}

